@using Microsoft.AspNetCore.Components.Web
@namespace T1020075.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link href="_content/DevExpress.Blazor.Themes/blazing-berry.bs5.css" rel="stylesheet" />

    <link href="~/css/site.css" rel="stylesheet" />
    <link href="T1020075.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
    <script type="text/javascript" src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-3.4.1.min.js"></script>
    <!-- DevExtreme themes -->
    <link rel="stylesheet" href="https://cdn3.devexpress.com/jslib/22.1.3/css/dx.common.css">
    <link rel="stylesheet" href="https://cdn3.devexpress.com/jslib/22.1.3/css/dx.light.css">
    <!-- DevExtreme library -->
    <script type="text/javascript" src="https://cdn3.devexpress.com/jslib/22.1.3/js/dx.all.js"></script>
        <script>
            var mapInstance;
            var mapTypes = [{
                key: "roadmap",
                name: "Road Map"
            }, {
                key: "satellite",
                name: "Satellite (Photographic) Map"
            }, {
                key: "hybrid",
                name: "Hybrid Map"
            }];

            function renderMap() {
                mapInstance = $("#map").dxMap({
                    center: "Brooklyn Bridge,New York,NY",
                    zoom: 14,
                    height: "100%",
                    width: "100%",
                    provider: "bing",
                    apiKey: {
                        // Specify your API keys for each map provider:
                        //bing: "YOUR_BING_MAPS_API_KEY",
                        //google: "YOUR_GOOGLE_MAPS_API_KEY",
                        //googleStatic: "YOUR_GOOGLE_STATIC_MAPS_API_KEY"
                    },
                    type: mapTypes[0].key
                }).dxMap("instance"); 

            }
        </script>
</head>
<body class="dx-viewport">
    @{
        var isIEOrEdgeLegacy = Context.Request.Headers["User-Agent"]
            .Any(userAgent => userAgent.Contains("MSIE") || userAgent.Contains("Trident") || userAgent.Contains("Edge/"));
    }
    @if(isIEOrEdgeLegacy)
    {
        <component type="typeof(T1020075.Shared.BrowserNotSupported)" render-mode="Static" />
    }
    else
    {
        @RenderBody()

        <div id="blazor-error-ui">
            <environment include="Staging,Production">
                An error has occurred. This application may no longer respond until reloaded.
            </environment>
            <environment include="Development">
                An unhandled exception has occurred. See browser dev tools for details.
            </environment>
            <a href="" class="reload">Reload</a>
            <a class="dismiss">🗙</a>
        </div>

        <script src="_framework/blazor.server.js"></script>
    }
</body>
</html>