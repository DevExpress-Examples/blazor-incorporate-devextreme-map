@using Microsoft.JSInterop
@using DevExpress.Blazor
@inject IJSRuntime JS
@implements IAsyncDisposable

<div @ref="Gauge"></div>

@code {
    ElementReference Gauge { get; set; }
    IJSObjectReference ClientModule { get; set; }
    IJSObjectReference ClientGauge { get; set; }

    [Parameter]
    public object DataSource { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if(firstRender) {
            await JS.LoadDxResources();
            ClientModule = await JS.InvokeAsync<IJSObjectReference>("import", "./DevExtremeComponents/DevExtremeGauge.razor.js");
            ClientGauge = await ClientModule.InvokeAsync<IJSObjectReference>("initializeGauge", Gauge, DataSource);
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    protected override async Task OnParametersSetAsync() {
        if(ClientGauge != null) {
            await ClientModule.InvokeVoidAsync("changeGaugeDataSource", ClientGauge, DataSource);
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync() {
        if(ClientGauge != null)
            await ClientGauge.DisposeAsync();
        if(ClientModule != null)
            await ClientModule.DisposeAsync();
    }
}
